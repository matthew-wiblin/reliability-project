user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;
events {
    worker_connections 768;
    multi_accept off;
}
http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    server_tokens off;
    # add_header X-XSS-Protection "1; mode=block";
    # server_names_hash_bucket_size 64;
    server_name_in_redirect off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    ##
    # Gzip Settings
    ##
    gzip on;
    # max request per sec set to 1
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    # set path to cache folder etc
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
    server {
        listen 80;
        location / {
            proxy_pass_request_headers on;
            proxy_pass http://18.171.190.230;
            proxy_http_version 1.1;
            proxy_intercept_errors on;
            error_page 500 502 503 504 = @retry;
            proxy_connect_timeout 60s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_next_upstream_timeout 60s;
            proxy_next_upstream_tries 30;
            # up to 7 excessive requests will be placed in zone one
            # requests beyond this will be rejected with a 503
            limit_req zone=one burst=7;
            # Enable caching and use the defined cache zone
            proxy_cache my_cache;
            # Define conditions for caching
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            # Set request headers to handle caching behavior
            add_header X-Cache-Status $upstream_cache_status;
            proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_cache_control;
        }
        location @retry {
            proxy_pass_request_headers on;
            proxy_pass http://18.171.190.230;
        }